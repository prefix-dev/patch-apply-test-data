From 5eb60d1a8dd2281cccc530ba5ab361f71f313cbd Mon Sep 17 00:00:00 2001
From: Chris Burr <christopher.burr@cern.ch>
Date: Mon, 3 Feb 2025 20:07:57 +0100
Subject: [PATCH 3/3] Get rid of forced C++ 11

---
 CMakeLists.txt                        |  3 ---
 cmake/modules/CMakeCXX11Support.cmake | 38 ---------------------------
 2 files changed, 41 deletions(-)
 delete mode 100644 cmake/modules/CMakeCXX11Support.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7d0abf32..d8a47bf8 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -58,7 +58,6 @@ include(DefineInstallationPaths REQUIRED)
 include(ReleaseDebugAutoFlags REQUIRED)
 include(CMakeGeneratePkgConfig REQUIRED)
 include(MacroAddDoxygen REQUIRED)
-include(CMakeCXX11Support REQUIRED)
 include(PortabilityGNUCheck REQUIRED)
 
 
@@ -116,8 +115,6 @@ add_definitions( -D_GNU_SOURCE)              # GNU source, import LFS, etc...
 add_definitions( -D__DAVIX_INSIDE__)         # protection flag
 add_definitions( -D__STDC_LIMIT_MACROS )     # C99 limit macros
 
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CXX11_FLAG_ENABLE}")
-
 #-------------------------------------------------------------------------------
 # Are we using system, or embedded libcurl?
 #-------------------------------------------------------------------------------
diff --git a/cmake/modules/CMakeCXX11Support.cmake b/cmake/modules/CMakeCXX11Support.cmake
deleted file mode 100644
index 4b6edf25..00000000
--- a/cmake/modules/CMakeCXX11Support.cmake
+++ /dev/null
@@ -1,38 +0,0 @@
-include(CheckCXXSourceCompiles REQUIRED)
-
-
-if(CMAKE_COMPILER_IS_GNUCXX)
-   execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
-   if(GCC_VERSION VERSION_GREATER 6.1 OR GCC_VERSION VERSION_EQUAL 6.1)
-		SET(HAVE_CXX011_FULL_SUPPORT TRUE)
-		SET(HAVE_CXX011_PARTIAL_SUPPORT TRUE)
-   elseif(GCC_VERSION VERSION_GREATER 4.7 OR GCC_VERSION VERSION_EQUAL 4.7)
-		SET(HAVE_CXX011_FULL_SUPPORT TRUE)
-		SET(HAVE_CXX011_PARTIAL_SUPPORT TRUE)
-		SET(CXX11_FLAG_ENABLE "-std=c++11")
-   elseif(GCC_VERSION VERSION_GREATER 4.3 OR GCC_VERSION VERSION_EQUAL 4.3)
-        message(STATUS "C++11 partial support")
-		SET(HAVE_CXX011_PARTIAL_SUPPORT TRUE)
-                SET(CXX11_FLAG_ENABLE "-std=c++0x")
-   else ()
-        message(STATUS "C++11 no support ")
-        SET(CXX11_FLAG_ENABLE "")
-   endif()
-else(CMAKE_COMPILER_IS_GNUCXX)
-   message(STATUS "C++11 activated full")
-   SET(HAVE_CXX011_FULL_SUPPORT TRUE)
-   SET(HAVE_CXX011_PARTIAL_SUPPORT TRUE)
-   SET(CXX11_FLAG_ENABLE "-std=c++0x")
-endif(CMAKE_COMPILER_IS_GNUCXX)
-
-## Check TR1
-CHECK_CXX_SOURCE_COMPILES("
-#include <tr1/functional>
-int main() { return 0; }"
- HAVE_TR1_SUPPORT)
-
-if(HAVE_TR1_SUPPORT)
-message(STATUS "TR1 support detected")
-else(HAVE_TR1_SUPPORT)
-message(STATUS "no TR1 support")
-endif(HAVE_TR1_SUPPORT)
-- 
2.47.0

