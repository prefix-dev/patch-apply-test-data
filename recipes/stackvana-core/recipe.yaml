# LSST DM versions are prefixed with letters
#
#  - a weekly build is 'w_2018_50'
#  - a major release is 'v18_1'
#
# In order to play nice with conda, we take the following conventions
#
#  - for a weekly build 'w_2018_50', the conda version is '0.2018.50'
#  - for a major version 'v18_1', the conda version is '18.1.0'
#
schema_version: 1

context:
  name: stackvana-core
  version: "0.2025.19"
  patch_version: '${{ (version | split(".")) | last if (version | split(".")) | last | list | length == 2 else "0" + (version|split(".")) | last }}'
  dm_tag: ${{ "w_" + (version|split("."))[1] + "_" + patch_version if (version | split(".")) | first == "0" else "v" + version | replace(".", "_") }}
  rubin_env: 10
  lsst_pyver: "3.12"

recipe:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://eups.lsst.codes/stack/src/tags/${{ dm_tag }}.list
  sha256: a856b21e967e2eaf3ba753121fca12b1caf7085587e03b0bf0244b3a51bc28dc

build:
  number: 1
  skip:
    - win
    - match(python, "!=" + lsst_pyver)
  merge_build_and_host_envs: true

outputs:
  - package:
      name: stackvana-core
      version: ${{ version }}
    requirements:
      host:
        - python
      run:
        - python
        - ${{ pin_subpackage('stackvana-core-impl', exact=True) }}
      run_exports:
        - ${{ pin_subpackage('stackvana-core-impl', exact=True) }}
    tests:
      - python:
          imports:
            - lsst
          pip_check: false
      - script:
        - set +x
        - if [[ ! ${STACKVANA_ACTIVATED} ]]; then exit 1; fi
        - eups -h
        - eups list
        - setup sconsUtils
        - python -c "import lsst"
        - python -c "import lsst.sconsUtils"

  - package:
      name: stackvana-core-impl
      version: ${{ version }}
    build:
      script:
        file: build_impl.sh
        env:
          LSST_PYVER: ${{ lsst_pyver }}
    requirements:
      host:
        - python
        - rubin-env-nosysroot =${{ rubin_env }}
      run:
        - python
        - ${{ pin_compatible('rubin-env-nosysroot', upper_bound='x') }}
    tests:
      - python:
          imports:
            - lsst
          pip_check: false
      - script:
        - set +x
        - if [[ ! ${STACKVANA_ACTIVATED} ]]; then exit 1; fi
        - eups -h
        - eups list
        - setup sconsUtils
        - python -c "import lsst"
        - python -c "import lsst.sconsUtils"
      - script: run_test_impl.sh
        requirements:
          run:
            - conda
            - micromamba
            - python
            - rubin-env-nosysroot =${{ rubin_env }}

about:
  license: GPL-3.0-or-later
  license_file:
    - LICENSE
    - COPYRIGHT
  summary: core build tooling for stackvana
  homepage: https://github.com/beckermr/stackvana-core

extra:
  recipe-maintainers:
    - beckermr
