diff --git i/Makefile w/Makefile
index 91e94e4..4e91bad 100644
--- i/Makefile
+++ w/Makefile
@@ -59,16 +59,16 @@ CORE_OBJ_FILES := $(CORE_CPP_FILES:.cpp=.o)
 build/lib:
 	mkdir -p build/lib
 
-build/lib/libolbcore.a: build/lib $(CORE_OBJ_FILES)
-	ar rc $@ $(CORE_OBJ_FILES)
+build/lib/libolbcore$(SHLIB_EXT): build/lib $(CORE_OBJ_FILES)
+	$(CXX) $(CXXFLAGS) -shared -o $@ $(CORE_OBJ_FILES)
 
-core: build/lib/libolbcore.a
+core: build/lib/libolbcore$(SHLIB_EXT)
 
 DEFAULT_TARGETS += core
 
 clean-core:
 	rm -f $(CORE_OBJ_FILES)
-	rm -f build/lib/libolbcore.a
+	rm -f build/lib/libolbcore$(SHLIB_EXT)
 
 CLEAN_TARGETS += clean-core
 
@@ -126,4 +126,4 @@ clean-all: clean-samples clean
 ###########################################################################
 ## Default targets (called for plain `make`)
 
-default: $(DEFAULT_TARGETS)
\ No newline at end of file
+default: $(DEFAULT_TARGETS)
diff --git i/config.mk w/config.mk
index 9f08429..5175e18 100644
--- i/config.mk
+++ w/config.mk
@@ -12,12 +12,12 @@
 #  - Start the simulation using `./poiseuille2d`
 
 # Compiler to use for C++ files, change to `mpic++` when using OpenMPI and GCC
-CXX             := g++
+CXX             ?= g++
 # Compiler to use for C files (used for emebedded dependencies)
-CC              := gcc
+CC              ?= gcc
 
 # Suggested optimized build flags for GCC, consult `config/` for further examples
-CXXFLAGS        := -O3 -Wall -march=native -mtune=native
+CXXFLAGS        ?= -O3 -Wall -march=native -mtune=native
 # Uncomment to add debug symbols and enable runtime asserts
 #CXXFLAGS        += -g -DOLB_DEBUG
 
@@ -34,25 +34,25 @@ LDFLAGS         :=
 # Parallelization mode, must be one of: OFF, MPI, OMP, HYBRID
 # Note that for MPI and HYBRID the compiler also needs to be adapted.
 # See e.g. `config/cpu_gcc_openmpi.mk`
-PARALLEL_MODE   := OFF
+PARALLEL_MODE   ?= OMP
 
 # optional MPI and OpenMP flags
-MPIFLAGS        :=
-OMPFLAGS        := -fopenmp
+MPIFLAGS        ?=
+OMPFLAGS        ?= -fopenmp
 
 # Options: CPU_SISD, CPU_SIMD, GPU_CUDA
 # Both CPU_SIMD and GPU_CUDA require system-specific adjustment of compiler flags.
 # See e.g. `config/cpu_simd_intel_mpi.mk` or `config/gpu_only.mk` for examples.
 # CPU_SISD must always be present.
-PLATFORMS       := CPU_SISD
+PLATFORMS       ?= CPU_SISD
 
 # Fundamental arithmetic data type
 # Common options are float or double
-FLOATING_POINT_TYPE := double
+FLOATING_POINT_TYPE ?= double
 
 # Any entries are passed to the compiler as `-DFEATURE_*` declarations
 # Used to enable some alternative code paths and dependencies
-FEATURES        :=
+FEATURES        ?=
 
 # Set to OFF if libz and tinyxml are provided by the system (optional)
-USE_EMBEDDED_DEPENDENCIES := ON
+USE_EMBEDDED_DEPENDENCIES := OFF
